// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: goUpstreamTelemetry/TelemetryService.proto

package goUpstreamTelemetry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type TelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string `protobuf:"bytes,1,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	TelemetryData   string `protobuf:"bytes,2,opt,name=TelemetryData,proto3" json:"TelemetryData,omitempty"`
}

func (x *TelemetryRequest) Reset() {
	*x = TelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryRequest) ProtoMessage() {}

func (x *TelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryRequest.ProtoReflect.Descriptor instead.
func (*TelemetryRequest) Descriptor() ([]byte, []int) {
	return file_goUpstreamTelemetry_TelemetryService_proto_rawDescGZIP(), []int{0}
}

func (x *TelemetryRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *TelemetryRequest) GetTelemetryData() string {
	if x != nil {
		return x.TelemetryData
	}
	return ""
}

type TelemetryBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string   `protobuf:"bytes,1,opt,name=ApplicationName,proto3" json:"ApplicationName,omitempty"`
	TelemetryData   []string `protobuf:"bytes,2,rep,name=TelemetryData,proto3" json:"TelemetryData,omitempty"`
}

func (x *TelemetryBatchRequest) Reset() {
	*x = TelemetryBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryBatchRequest) ProtoMessage() {}

func (x *TelemetryBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryBatchRequest.ProtoReflect.Descriptor instead.
func (*TelemetryBatchRequest) Descriptor() ([]byte, []int) {
	return file_goUpstreamTelemetry_TelemetryService_proto_rawDescGZIP(), []int{1}
}

func (x *TelemetryBatchRequest) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *TelemetryBatchRequest) GetTelemetryData() []string {
	if x != nil {
		return x.TelemetryData
	}
	return nil
}

// The response message containing the greetings.
type TelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *TelemetryResponse) Reset() {
	*x = TelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryResponse) ProtoMessage() {}

func (x *TelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryResponse.ProtoReflect.Descriptor instead.
func (*TelemetryResponse) Descriptor() ([]byte, []int) {
	return file_goUpstreamTelemetry_TelemetryService_proto_rawDescGZIP(), []int{2}
}

func (x *TelemetryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TelemetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_goUpstreamTelemetry_TelemetryService_proto protoreflect.FileDescriptor

var file_goUpstreamTelemetry_TelemetryService_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x67, 0x6f, 0x55, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x68, 0x75,
	0x62, 0x65, 0x64, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x22, 0x62, 0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x15, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x41, 0x0a, 0x11, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0xdd, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x12, 0x62, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74,
	0x72, 0x79, 0x12, 0x27, 0x2e, 0x68, 0x75, 0x62, 0x65, 0x64, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x75,
	0x62, 0x65, 0x64, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x2e, 0x68, 0x75,
	0x62, 0x65, 0x64, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x74, 0x72, 0x79, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x75, 0x62, 0x65,
	0x64, 0x67, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x67, 0x6f, 0x55, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goUpstreamTelemetry_TelemetryService_proto_rawDescOnce sync.Once
	file_goUpstreamTelemetry_TelemetryService_proto_rawDescData = file_goUpstreamTelemetry_TelemetryService_proto_rawDesc
)

func file_goUpstreamTelemetry_TelemetryService_proto_rawDescGZIP() []byte {
	file_goUpstreamTelemetry_TelemetryService_proto_rawDescOnce.Do(func() {
		file_goUpstreamTelemetry_TelemetryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_goUpstreamTelemetry_TelemetryService_proto_rawDescData)
	})
	return file_goUpstreamTelemetry_TelemetryService_proto_rawDescData
}

var file_goUpstreamTelemetry_TelemetryService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_goUpstreamTelemetry_TelemetryService_proto_goTypes = []interface{}{
	(*TelemetryRequest)(nil),      // 0: hubedgeproxytelemetry.TelemetryRequest
	(*TelemetryBatchRequest)(nil), // 1: hubedgeproxytelemetry.TelemetryBatchRequest
	(*TelemetryResponse)(nil),     // 2: hubedgeproxytelemetry.TelemetryResponse
}
var file_goUpstreamTelemetry_TelemetryService_proto_depIdxs = []int32{
	0, // 0: hubedgeproxytelemetry.Telemetry.SendTelemetry:input_type -> hubedgeproxytelemetry.TelemetryRequest
	1, // 1: hubedgeproxytelemetry.Telemetry.SendTelemetryBatch:input_type -> hubedgeproxytelemetry.TelemetryBatchRequest
	2, // 2: hubedgeproxytelemetry.Telemetry.SendTelemetry:output_type -> hubedgeproxytelemetry.TelemetryResponse
	2, // 3: hubedgeproxytelemetry.Telemetry.SendTelemetryBatch:output_type -> hubedgeproxytelemetry.TelemetryResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_goUpstreamTelemetry_TelemetryService_proto_init() }
func file_goUpstreamTelemetry_TelemetryService_proto_init() {
	if File_goUpstreamTelemetry_TelemetryService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goUpstreamTelemetry_TelemetryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goUpstreamTelemetry_TelemetryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goUpstreamTelemetry_TelemetryService_proto_goTypes,
		DependencyIndexes: file_goUpstreamTelemetry_TelemetryService_proto_depIdxs,
		MessageInfos:      file_goUpstreamTelemetry_TelemetryService_proto_msgTypes,
	}.Build()
	File_goUpstreamTelemetry_TelemetryService_proto = out.File
	file_goUpstreamTelemetry_TelemetryService_proto_rawDesc = nil
	file_goUpstreamTelemetry_TelemetryService_proto_goTypes = nil
	file_goUpstreamTelemetry_TelemetryService_proto_depIdxs = nil
}
