# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: GoTool@0
  inputs:
    version: '1.14.2'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u github.com/golang/protobuf/proto'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u github.com/golang/protobuf/protoc-gen-go'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u google.golang.org/grpc'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: 'github.com/boltdb/bolt/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u github.com/gin-gonic/gin'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: 'gopkg.in/ini.v1'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-u github.com/dgrijalva/jwt-go'
    workingDirectory: '$(System.DefaultWorkingDirectory)'

- script: |
    echo ${{ variables.GOARCH }}
    echo ${{ variables.GOOS }}
  displayName: "Setting Go build environment variables"
- task: Go@0 
  inputs:
    command: 'build'
    arguments: '-o bine_arm'
